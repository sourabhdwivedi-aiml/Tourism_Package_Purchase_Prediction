name: Tourism Package Purchase Prediction pipeline

on:
  push:
    branches: [ main ]

permissions:
  contents: write    # needed for optional auto-commit step

concurrency:
  group: tourism-pipeline-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: Tourism_Package_Purchase_Prediction

jobs:

  register-dataset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml

      - name: Install Dependencies
        run: |
          set -euo pipefail
          REQ_PATH="$(git ls-files | grep -E '(^|/)requirements\.txt$' | head -n1 || true)"
          if [ -z "$REQ_PATH" ]; then
            echo "requirements.txt not found"; exit 1
          fi
          python -m pip install --upgrade pip
          python -m pip install -r "$REQ_PATH"

      - name: Upload dataset to Hugging Face Hub
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python model_building/data_register.py

  data-prep:
    needs: register-dataset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml

      - name: Install Dependencies
        run: |
          set -euo pipefail
          REQ_PATH="$(git ls-files | grep -E '(^|/)requirements\.txt$' | head -n1 || true)"
          if [ -z "$REQ_PATH" ]; then
            echo "requirements.txt not found"; exit 1
          fi
          python -m pip install --upgrade pip
          python -m pip install -r "$REQ_PATH"

      - name: Run Data Preparation
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python model_building/prep.py

  model-training:
    needs: data-prep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml

      - name: Install Dependencies
        run: |
          set -euo pipefail
          REQ_PATH="$(git ls-files | grep -E '(^|/)requirements\.txt$' | head -n1 || true)"
          if [ -z "$REQ_PATH" ]; then
            echo "requirements.txt not found"; exit 1
          fi
          python -m pip install --upgrade pip
          python -m pip install -r "$REQ_PATH"

      - name: Train & upload model to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          # Log MLflow locals runs to a file store in the repo (no server needed)
          MLFLOW_TRACKING_URI: file:./mlruns
        run: python model_building/train.py

      # OPTIONAL: commit code updates made by the pipeline (e.g., version bump)
      - name: Auto-commit code changes to main (optional)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Example: stamp file to demonstrate a code push
          echo "$(date -u) [skip ci]" > PIPELINE_LAST_RUN_UTC.txt
          git add PIPELINE_LAST_RUN_UTC.txt || true
          git commit -m "chore: pipeline stamp [skip ci]" || exit 0
          git push origin HEAD:main

  deploy-hosting:
    needs: [model-training, data-prep, register-dataset]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml

      - name: Install Dependencies
        run: |
          set -euo pipefail
          REQ_PATH="$(git ls-files | grep -E '(^|/)requirements\.txt$' | head -n1 || true)"
          if [ -z "$REQ_PATH" ]; then
            echo "requirements.txt not found"; exit 1
          fi
          python -m pip install --upgrade pip
          python -m pip install -r "$REQ_PATH"

      - name: Push files to Frontend Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python hosting/hosting.py
